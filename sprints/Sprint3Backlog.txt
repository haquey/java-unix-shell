June 20 to June 27

User Stories from Product Backlog that we will address in this sprint:
a) The user can traverse through nested directories using the “cd” 
   command and a given directory “DIR” i.e. cd DIR. Instead of a 
   directory the user can pass through “..” which represents the 
   parent directory or “.” which represent the current directory
b) The user can print a file or multiple files onto the shell using
   the “cat” or “ls” command and given file names “FILE1 FILE2 …” 		
   i.e. cat FILE1 i.e. ls FILE1 FILE2 
c) The user can print the contents of the directory using the “ls”  
   command and a valid path “PATH”. i.e. ls PATH … The user 
   is given a error message if an invalid path is given.
d) The user can create new directories using the “mkdir” command and a 
   directory “DIR” i.e. mkdir DIR
e) The user can save the current working directory using the 		
   “pushd DIR” (where DIR is a specified directory) command 
   and  change to the specified DIR as the working directory. 
   The saved old current directory can be returned to at any 
   time.
f) The user can remove the last saved directory using the “popd”
   command and makes it the current working directory. If there 
   is no saved directory an appropriate error message will be 
   displayed.
g) The user can use the “man” command to get a description of
   another specific command “CMD” i.e. man CMD
h) The user can use the “echo” command with “>> OUTFILE” to modify		
   the outfile such that it appends an extra string line “STRING” to 
   the end of the file. i.e. echo STRING >> OUTFILE
i) The user can print out recent commands in chronological 				
   order using the “history” command, this also includes syntactic		
   errors typed. i.e history.
j) The user enters a command and the proper command is ensured to run
k) The user should be able to create and store text in the form of a file,
   and should be able to display the contents
l) The user can terminate the session by running the “exit” command
m) The user can display the whole path of the current directory 
   using the “pwd” command
n) Display the results of the users command(s)


Specific tasks to be accomplished:
a-1. (CD) Test CD by writing test cases; Correct any bugs during testing
b-1. (Cat) Test Cat by writing test cases; Correct any bugs during testing
c-1. (LS) Create test cases, and test the functionality of LS
c-2. (LS) Print and error message if the given argument is not found
d-1. (Mkdir) Create test cases, and test the functionality of Mkdir
e-1. (pushd) Test pushd by writing test cases; Ensure no bugs are present
f-1. (popd) Test popd by writing test cases; Ensure no bugs are present
f-2. (DirStack) Create test cases and ensure no bugs are present
g-1. (Man) Test Man against all the commands; write test cases
g-2. (Man) Call toString methods to print documentation for user when specified
h-1. (EchoAppend) Create test cases; correct any logical or syntax errors found
h-2. (EchoOverwrite) Create test cases; correct any errors found during tests
i-1. (History) Test the history class; ensure no bugs exist
j-1. (ProQuery) Create the code to be able to call the correct command
j-2. (ProQuery) Test ProQuery
j-3. (JShell) Allow for the processing of commands
k-1. (File) Test file class to ensure no bugs exist
l-1. (Exit) Test to ensure that the program exits correctly when wanted
m-1. (PWD) Test pwd to ensure it works properly
n-1. (Output) Test to ensure the proper output is displayed when needed; This 
	 falls in line with testing the other classes as well


These tasks are assigned as follows:

User: Xu Sheng Gao
Tasks: a-1, a-2, d-1, d-2, h-1, h-2, k-1, l-1, m-1, n-1
   
User: Yasir Haque
Tasks: b-1, g-1, g-2, j-1, j-2

User: Marion Vasantharajah
Tasks: c-1, c-2, d-1

User: Adnan Shahid
Tasks: e-1, f-1, f-2, i-1, j-3

